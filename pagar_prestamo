DELIMITER $$

CREATE PROCEDURE pagar_prestamo(
    IN p_prestamo_id INT,
    IN p_cuota_id INT,
    IN p_monto_pago DECIMAL(12,2),
    IN p_usuario_registro INT
)
BEGIN
    DECLARE v_monto_pendiente DECIMAL(12,2);
    DECLARE v_nuevo_monto_pendiente DECIMAL(12,2);
    DECLARE v_estado_actual ENUM('PENDIENTE','PAGADO');
    DECLARE v_nuevo_estado ENUM('PENDIENTE','PAGADO');

    -- Obtener monto pendiente y estado actual de la cuota
    SELECT monto_pendiente, estado
    INTO v_monto_pendiente, v_estado_actual
    FROM cuotas_prestamos
    WHERE id_cuota = p_cuota_id AND id_prestamo = p_prestamo_id;

    -- Validar si la cuota ya está pagada
    IF v_estado_actual = 'PAGADO' THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'No se puede registrar el pago. La cuota ya está pagada.';
    END IF;

    -- Validar que el monto a pagar no exceda el monto pendiente
    IF p_monto_pago > v_monto_pendiente THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'El monto del pago excede el saldo pendiente de la cuota.';
    END IF;

    -- Calcular nuevo monto pendiente
    SET v_nuevo_monto_pendiente = v_monto_pendiente - p_monto_pago;

    -- Determinar nuevo estado
    IF v_nuevo_monto_pendiente <= 0 THEN
        SET v_nuevo_estado = 'PAGADO';
        SET v_nuevo_monto_pendiente = 0; -- Evita valores negativos
    ELSE
        SET v_nuevo_estado = 'PENDIENTE';
    END IF;

    -- Actualizar cuota
    UPDATE cuotas_prestamos
    SET 
        monto_pendiente = v_nuevo_monto_pendiente,
        estado = v_nuevo_estado
    WHERE id_cuota = p_cuota_id;

    -- Insertar el registro del pago
    INSERT INTO pago_prestamo (
        prestamo_id, 
        monto, 
        usuario_registro, 
        fecha, 
        id_estado, 
        cuota_id
    ) VALUES (
        p_prestamo_id, 
        p_monto_pago, 
        p_usuario_registro, 
        CURDATE(), 
        1, -- estado registrado
        p_cuota_id
    );
END$$

DELIMITER ;

